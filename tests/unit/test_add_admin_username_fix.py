"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ username
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '../../bot'))


def test_add_admin_username_logic():
    """–¢–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ username"""
    
    def simulate_add_admin_logic(username, db_has_user=False, telegram_api_works=True):
        """
        –°–∏–º—É–ª–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        
        Args:
            username: Username –±–µ–∑ @
            db_has_user: –ï—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
            telegram_api_works: –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ Telegram API
        """
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ action_add_admin.py (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
        target_user_id = None
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ get_chat (—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram)
        if telegram_api_works:
            # –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π get_chat
            target_user_id = 123456789  # –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π user_id
            print(f"‚úÖ get_chat('@{username}') —É—Å–ø–µ—à–µ–Ω, user_id = {target_user_id}")
        else:
            # –ò–º–∏—Ç–∏—Ä—É–µ–º TelegramAPIError
            print(f"‚ùå get_chat('@{username}') failed with TelegramAPIError")
            
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —á–µ—Ä–µ–∑ get_chat, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            if db_has_user:
                target_user_id = 987654321  # –ò–º–∏—Ç–∏—Ä—É–µ–º user_id –∏–∑ –ë–î
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω –≤ –ë–î, user_id = {target_user_id}")
            else:
                print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
        
        return target_user_id
    
    # –¢–µ—Å—Ç 1: –£—Å–ø–µ—à–Ω—ã–π get_chat (–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    result = simulate_add_admin_logic("jericho_pipes", db_has_user=False, telegram_api_works=True)
    assert result == 123456789, f"Expected 123456789, got {result}"
    print("‚úÖ –¢–µ—Å—Ç 1 –ø—Ä–æ–π–¥–µ–Ω: –£—Å–ø–µ—à–Ω—ã–π get_chat –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    # –¢–µ—Å—Ç 2: get_chat –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –ë–î
    result = simulate_add_admin_logic("jericho_pipes", db_has_user=True, telegram_api_works=False)
    assert result == 987654321, f"Expected 987654321, got {result}"
    print("‚úÖ –¢–µ—Å—Ç 2 –ø—Ä–æ–π–¥–µ–Ω: get_chat –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
    
    # –¢–µ—Å—Ç 3: get_chat –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î
    result = simulate_add_admin_logic("jericho_pipes", db_has_user=False, telegram_api_works=False)
    assert result is None, f"Expected None, got {result}"
    print("‚úÖ –¢–µ—Å—Ç 3 –ø—Ä–æ–π–¥–µ–Ω: get_chat –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î")
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ª–æ–≥–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")


def test_username_processing():
    """–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ username"""
    
    def process_username(text):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ username –∫–∞–∫ –≤ action_add_admin.py"""
        if text and text.strip().startswith('@'):
            return text.strip()[1:]  # —É–±–∏—Ä–∞–µ–º @
        return None
    
    # –¢–µ—Å—Ç 1: –û–±—ã—á–Ω—ã–π username
    result = process_username("@jericho_pipes")
    assert result == "jericho_pipes", f"Expected 'jericho_pipes', got '{result}'"
    
    # –¢–µ—Å—Ç 2: Username —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
    result = process_username("  @jericho_pipes  ")
    assert result == "jericho_pipes", f"Expected 'jericho_pipes', got '{result}'"
    
    # –¢–µ—Å—Ç 3: Username –±–µ–∑ @
    result = process_username("jericho_pipes")
    assert result is None, f"Expected None, got '{result}'"
    
    print("‚úÖ –¢–µ—Å—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ username –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")


def test_api_call_format():
    """–¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∞ –≤—ã–∑–æ–≤–∞ API"""
    
    def format_api_call(username):
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è API –≤—ã–∑–æ–≤–∞"""
        return f"@{username}"
    
    # –¢–µ—Å—Ç 1: –û–±—ã—á–Ω—ã–π username
    api_call = format_api_call("jericho_pipes")
    assert api_call == "@jericho_pipes", f"Expected '@jericho_pipes', got '{api_call}'"
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –¥–≤–æ–π–Ω–æ–≥–æ @
    assert not api_call.startswith("@@"), "API call should not have double @"
    
    print("‚úÖ –¢–µ—Å—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∞ API –≤—ã–∑–æ–≤–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")


def test_consistency_with_transfer_admin():
    """–¢–µ—Å—Ç –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–µ—Ä–µ–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    
    def add_admin_logic(username, telegram_api_works=True, db_has_user=False):
        """–õ–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)"""
        target_user_id = None
        
        if telegram_api_works:
            target_user_id = 123456789
        else:
            if db_has_user:
                target_user_id = 987654321
        
        return target_user_id
    
    def transfer_admin_logic(username, telegram_api_works=True, db_has_user=False):
        """–õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è)"""
        target_user_id = None
        
        if telegram_api_works:
            target_user_id = 123456789
        else:
            if db_has_user:
                target_user_id = 987654321
        
        return target_user_id
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
    test_cases = [
        ("jericho_pipes", True, False),   # get_chat —Ä–∞–±–æ—Ç–∞–µ—Ç
        ("jericho_pipes", False, True),   # get_chat –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –µ—Å—Ç—å –≤ –ë–î
        ("jericho_pipes", False, False),  # get_chat –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–µ—Ç –≤ –ë–î
    ]
    
    for username, telegram_api_works, db_has_user in test_cases:
        add_result = add_admin_logic(username, telegram_api_works, db_has_user)
        transfer_result = transfer_admin_logic(username, telegram_api_works, db_has_user)
        
        assert add_result == transfer_result, f"Inconsistent logic for username='{username}', telegram_api_works={telegram_api_works}, db_has_user={db_has_user}: add='{add_result}', transfer='{transfer_result}'"
    
    print("‚úÖ –¢–µ—Å—Ç—ã –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–µ—Ä–µ–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")


if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ username...")
    
    try:
        test_add_admin_username_logic()
        test_username_processing()
        test_api_call_format()
        test_consistency_with_transfer_admin()
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        print("   - –ò–∑–º–µ–Ω–µ–Ω –ø–æ—Ä—è–¥–æ–∫ –ø–æ–∏—Å–∫–∞: —Å–Ω–∞—á–∞–ª–∞ get_chat(), –ø–æ—Ç–æ–º –ë–î")
        print("   - –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–µ—Ä–µ–¥–∞—á–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print("   - –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞–µ–≤ –∫–æ–≥–¥–∞ get_chat() –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("   - –£–ª—É—á—à–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ fallback –Ω–∞ –ø–æ–∏—Å–∫ –≤ –ë–î")
        
    except Exception as e:
        print(f"‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {e}")
        raise
