"""
–°–∏—Å—Ç–µ–º–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–æ–ª–µ–π –¥–ª—è event-driven –∫—ç—à–∞
"""
import logging
from typing import Dict, Any, Optional
from app.utils.event_driven_role_cache import get_event_driven_role_cache

class RoleChangeTracker:
    """
    –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫—ç—à
    """
    
    def __init__(self):
        self.cache = get_event_driven_role_cache()
        self._setup_event_handlers()
    
    def _setup_event_handlers(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π"""
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π
        self.cache.add_event_handler(self._log_role_event)
    
    async def _log_role_event(self, event_type: str, data: Dict[str, Any]):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π"""
        if event_type == 'role_changed':
            logging.info(f"üîÑ Role changed: user {data['user_id']} {data['old_role']} -> {data['new_role']}")
        elif event_type == 'role_invalidated':
            logging.info(f"üóëÔ∏è Role invalidated: user {data['user_id']} (was: {data['old_role']})")
        elif event_type == 'user_added':
            logging.info(f"‚ûï User added: {data['user_id']} -> {data['role']}")
        elif event_type == 'cache_cleared':
            logging.info(f"üßπ Cache cleared: {data['cleared_count']} entries")
    
    async def on_user_created(self, user_id: int, role: str = "user"):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        await self.cache.add_user(user_id, role)
        logging.info(f"üìù User created event: {user_id} -> {role}")
    
    async def on_role_changed(self, user_id: int, old_role: str, new_role: str):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            old_role: –°—Ç–∞—Ä–∞—è —Ä–æ–ª—å
            new_role: –ù–æ–≤–∞—è —Ä–æ–ª—å
        """
        await self.cache.update_role(user_id, new_role)
        logging.info(f"üìù Role change event: {user_id} {old_role} -> {new_role}")
    
    async def on_admin_added(self, user_id: int, username: Optional[str] = None):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        await self.cache.update_role(user_id, "admin")
        logging.info(f"üìù Admin added event: {user_id} (@{username})")
    
    async def on_admin_removed(self, user_id: int, username: Optional[str] = None):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        await self.cache.update_role(user_id, "user")
        logging.info(f"üìù Admin removed event: {user_id} (@{username})")
    
    async def on_admin_transferred(self, from_user_id: int, to_user_id: int, mailbox_id: int):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        
        Args:
            from_user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–µ—Ä–µ–¥–∞—é—â–µ–≥–æ –ø—Ä–∞–≤–∞
            to_user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–ª—É—á–∞—é—â–µ–≥–æ –ø—Ä–∞–≤–∞
            mailbox_id: ID —è—â–∏–∫–∞
        """
        # –ü–æ–ª—É—á–∞—Ç–µ–ª—å —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∞–¥–º–∏–Ω–æ–º (–µ—Å–ª–∏ –±—ã–ª –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º)
        await self.cache.update_role(to_user_id, "admin")
        logging.info(f"üìù Admin transfer event: {from_user_id} -> {to_user_id} (mailbox: {mailbox_id})")
    
    async def on_user_joined(self, user_id: int, username: Optional[str] = None):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        await self.cache.add_user(user_id, "user")
        logging.info(f"üìù User joined event: {user_id} (@{username})")
    
    async def on_user_left(self, user_id: int, username: Optional[str] = None):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        await self.cache.remove_user(user_id)
        logging.info(f"üìù User left event: {user_id} (@{username})")
    
    async def on_superadmin_changed(self, old_superadmin_id: Optional[int], new_superadmin_id: int):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
        
        Args:
            old_superadmin_id: ID —Å—Ç–∞—Ä–æ–≥–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
            new_superadmin_id: ID –Ω–æ–≤–æ–≥–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞
        """
        if old_superadmin_id:
            await self.cache.update_role(old_superadmin_id, "admin")
        await self.cache.update_role(new_superadmin_id, "superadmin")
        logging.info(f"üìù Superadmin changed: {old_superadmin_id} -> {new_superadmin_id}")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ç—Ä–µ–∫–µ—Ä–∞
_role_tracker: Optional[RoleChangeTracker] = None

def get_role_change_tracker() -> RoleChangeTracker:
    """
    –ü–æ–ª—É—á–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ç—Ä–µ–∫–µ—Ä–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–æ–ª–µ–π
    
    Returns:
        –≠–∫–∑–µ–º–ø–ª—è—Ä RoleChangeTracker
    """
    global _role_tracker
    if _role_tracker is None:
        _role_tracker = RoleChangeTracker()
    return _role_tracker

def init_role_change_tracker() -> RoleChangeTracker:
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–µ–∫–µ—Ä –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–æ–ª–µ–π
    
    Returns:
        –≠–∫–∑–µ–º–ø–ª—è—Ä RoleChangeTracker
    """
    global _role_tracker
    _role_tracker = RoleChangeTracker()
    return _role_tracker
