from aiogram import types
from app.infra.repo.mailboxes_repo import MailboxesRepo
from app.utils.mailbox_permissions import can_manage_mailbox
from app.core.constants import DAYS_OF_WEEK

async def cmd_statday(m: types.Message, db, active_mailbox_id: int):
    if not m.text or not m.text.startswith("/statday"):
        return
    parts = m.text.split()
    if len(parts) != 2 or not parts[1].isdigit():
        await m.answer("‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>\n\nüìù <b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> <code>/statday 1-7</code>\n\nüí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b>\n<code>/statday 1</code> - –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n<code>/statday 7</code> - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", parse_mode="HTML")
        return
    day = int(parts[1])
    if day < 1 or day > 7:
        await m.answer("‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏</b>\n\nüìÖ <b>–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è:</b> 1-7\n\nüí° <b>–ì–¥–µ:</b>\n1 - –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫\n7 - –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ", parse_mode="HTML")
        return
    if not active_mailbox_id:
        await m.answer("–Ø—â–∏–∫ –Ω–µ –≤—ã–±—Ä–∞–Ω")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —è—â–∏–∫—É
    if not await can_manage_mailbox(db, m.from_user.id, active_mailbox_id):
        await m.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —ç—Ç–æ–≥–æ —è—â–∏–∫–∞.")
        return
    
    box = await MailboxesRepo(db).get(active_mailbox_id)
    current_time = box[4] if box and len(box) > 4 else "10:00"
    await MailboxesRepo(db).set_stats_schedule(active_mailbox_id, day, current_time)
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–µ–Ω—å –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ
    day_name = DAYS_OF_WEEK[day]
    
    await m.answer(f"‚úÖ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞</b>\n\nüìÖ –î–µ–Ω—å: {day_name}\n‚è∞ –í—Ä–µ–º—è: {current_time}\n\nüí° <i>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ –∫–∞–Ω–∞–ª –∫–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é</i>", parse_mode="HTML")
