from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramAPIError
from app.fsm.admin_states import TransferAdminStates
from app.infra.repo.users_repo import UsersRepo
from app.infra.repo.mailboxes_repo import MailboxesRepo
from app.utils.mailbox_permissions import can_manage_mailbox

async def cb_transfer_admin_start(c: types.CallbackQuery, state: FSMContext, db):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ–¥–∞—á–∏ –∞–¥–º–∏–Ω–∫–∏"""
    if not c.data.startswith("transfer_admin:"):
        return
    
    mailbox_id = int(c.data.split(":")[1])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —è—â–∏–∫—É
    if not await can_manage_mailbox(db, c.from_user.id, mailbox_id):
        await c.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∞–¥–º–∏–Ω–∫–∏ —ç—Ç–æ–≥–æ —è—â–∏–∫–∞.", show_alert=True)
        await state.clear()
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —è—â–∏–∫–∞ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.set_data({"mailbox_id": mailbox_id})
    await state.set_state(TransferAdminStates.ASK_USER)
    
    await c.message.edit_text(
        "üîÑ <b>–ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–∞–≤ –Ω–∞ —è—â–∏–∫</b>\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ü–∏—Ñ—Ä–∞–º–∏, @username –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—é–¥–∞.\n\n"
        "‚ö†Ô∏è <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ü–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—ã –ø–æ—Ç–µ—Ä—è–µ—Ç–µ –ø—Ä–∞–≤–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–∏–º —è—â–∏–∫–æ–º, –Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!",
        parse_mode="HTML"
    )
    await c.answer()

async def on_transfer_admin_input(m: types.Message, state: FSMContext, db):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∞–¥–º–∏–Ω–∫–∏"""
    data = await state.get_data()
    mailbox_id = data.get("mailbox_id")
    
    if not mailbox_id:
        await m.answer("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID —è—â–∏–∫–∞.")
        await state.clear()
        return
    
    target_user_id = None

    # –ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if m.forward_from:
        target_user_id = m.forward_from.id
    # –ß–∏—Å–ª–æ–≤–æ–π ID
    elif m.text and m.text.strip().isdigit():
        target_user_id = int(m.text.strip())
    # @username ‚Üí —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ get_chat, –ø–æ—Ç–æ–º –∏—â–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    elif m.text and m.text.strip().startswith('@'):
        username = m.text.strip()[1:]  # —É–±–∏—Ä–∞–µ–º @
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ get_chat (—Ä–∞–±–æ—Ç–∞–µ—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram)
        try:
            chat = await m.bot.get_chat(f"@{username}")
            if chat and hasattr(chat, 'id') and chat.id:
                target_user_id = chat.id
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º username –≤ –±–∞–∑–µ –¥–ª—è –±—É–¥—É—â–∏—Ö –ø–æ–∏—Å–∫–æ–≤
                users_repo = UsersRepo(db)
                await users_repo.update_username(target_user_id, username)
            else:
                await m.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ @username. –ü—Ä–∏—à–ª–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID –∏–ª–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
                await state.clear()
                return
        except TelegramAPIError:
            # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —á–µ—Ä–µ–∑ get_chat, –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            users_repo = UsersRepo(db)
            target_user_id = await users_repo.get_by_username(username)
            
            if not target_user_id:
                await m.answer(
                    f"‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                    f"@username –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.\n"
                    f"–î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                    f"‚Ä¢ –ß–∏—Å–ª–æ–≤–æ–π ID (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789)\n"
                    f"‚Ä¢ –ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
                    parse_mode="HTML"
                )
                await state.clear()
                return

    if not target_user_id:
        await m.answer("–ù–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∏—à–ª–∏—Ç–µ user_id —Ü–∏—Ñ—Ä–∞–º–∏ –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
        await state.clear()
        return

    if target_user_id == m.from_user.id:
        await m.answer("‚ùå –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞—Ç—å –∞–¥–º–∏–Ω–∫—É —Å–∞–º–æ–º—É —Å–µ–±–µ.")
        await state.clear()
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —è—â–∏–∫–µ
    mailboxes_repo = MailboxesRepo(db)
    box = await mailboxes_repo.get(mailbox_id)
    if not box:
        await m.answer("‚ùå –Ø—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        await state.clear()
        return
    
    _, title, _, _, _, _ = box

    # –ü–µ—Ä–µ–¥–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —è—â–∏–∫: –æ–±–Ω–æ–≤–ª—è–µ–º creator_id –≤ —è—â–∏–∫–µ
    await mailboxes_repo.db.execute(
        "UPDATE mailboxes SET creator_id = ? WHERE id = ?",
        (target_user_id, mailbox_id)
    )
    await mailboxes_repo.db.commit()
    
    # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø–æ–ª—É—á–∞—Ç–µ–ª—é —Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ (–µ—Å–ª–∏ —É –Ω–µ–≥–æ –µ—ë –Ω–µ—Ç)
    users_repo = UsersRepo(db)
    current_role = await users_repo.get_role(target_user_id)
    was_user = current_role == "user"
    if was_user:
        await users_repo.upsert(target_user_id, role="admin")
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —è—â–∏–∫–∞
    try:
        from app.keyboards.write_flow import start_kb_admin
        if was_user:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—Ç–∞–ª –∞–¥–º–∏–Ω–æ–º –≤–ø–µ—Ä–≤—ã–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–µ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ
            await m.bot.send_message(
                target_user_id,
                f"üéâ <b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n\n"
                f"–í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞ ¬´–ó–ª–æ–µ –ø–∏—Å—å–º–æ¬ª.\n\n"
                f"–¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n"
                f"‚úçÔ∏è <b>–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ</b> ‚Äî —Å–æ–∑–¥–∞—Ç—å –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
                f"‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —è—â–∏–∫–∞–º–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n"
                f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏\n"
                f"üìå <b>–ó–∞–∫—Ä–µ–ø–∏—Ç—å –ø–æ—Å—Ç</b> ‚Äî —Å–æ–∑–¥–∞—Ç—å deeplink-–ø–æ—Å—Ç\n"
                f"üîÑ <b>–û–±–Ω–æ–≤–∏—Ç—å</b> ‚Äî —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –∫–∞–Ω–∞–ª–æ–º",
                reply_markup=start_kb_admin(),
                parse_mode="HTML"
            )
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –±—ã–ª –∞–¥–º–∏–Ω–æ–º, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–¥–∞—á–µ —è—â–∏–∫–∞
            await m.bot.send_message(
                target_user_id,
                f"üì¶ <b>–ü—Ä–∞–≤–∞ –Ω–∞ —è—â–∏–∫ –ø–µ—Ä–µ–¥–∞–Ω—ã!</b>\n\n"
                f"–í–∞–º –ø–µ—Ä–µ–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —è—â–∏–∫–∞ ¬´{title}¬ª.\n\n"
                f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º —è—â–∏–∫–æ–º —á–µ—Ä–µ–∑ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫.",
                reply_markup=start_kb_admin(),
                parse_mode="HTML"
            )
    except TelegramAPIError:
        pass  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞

    await state.clear()
    await m.answer(
        f"‚úÖ <b>–ü—Ä–∞–≤–∞ –Ω–∞ —è—â–∏–∫ –ø–µ—Ä–µ–¥–∞–Ω—ã!</b>\n\n"
        f"–Ø—â–∏–∫ ¬´{title}¬ª —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_user_id}.\n"
        f"–í—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ —Å–≤–æ—é —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –Ω–æ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —ç—Ç–∏–º —è—â–∏–∫–æ–º.",
        parse_mode="HTML"
    )
