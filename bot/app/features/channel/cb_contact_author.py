from aiogram import types
import logging
from app.infra.repo.posts_repo import PostsRepo
from app.services.relay_service import RelayService
from app.infra.repo.relays_repo import RelaysRepo
from app.services.alias_service import AliasService
from app.infra.repo.aliases_repo import AliasesRepo
from app.infra.repo.alias_words_repo import AliasWordsRepo
from app.infra.repo.alias_blocks_repo import AliasBlocksRepo

async def cb_contact(c: types.CallbackQuery, db, bot, tz, active_mailbox_id: int = None):
    rec = await PostsRepo(db).get(c.message.chat.id, c.message.message_id)
    if not rec:
        await c.answer("–ê–≤—Ç–æ—Ä –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω.", show_alert=True)
        return
    _, _, author_id, author_alias, _, _, _ = rec
    if c.from_user.id == author_id:
        await c.answer("–ù–µ—á–µ–≥–æ –ø–∏—Å–∞—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ üôÇ", show_alert=True)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —è—â–∏–∫–∞
    if not active_mailbox_id:
        await c.answer("‚ùå –ê–∫—Ç–∏–≤–Ω—ã–π —è—â–∏–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", show_alert=True)
        return
    
    # –°—Ä–∞–∑—É –ø–µ—Ä–µ–±—Ä–∞—Å—ã–≤–∞–µ–º –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º
    try:
        await c.answer("üí¨ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º...")
        
        # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞–º–∏ (–æ–¥–∏–Ω —Ä–∞–∑)
        alias_service = AliasService(AliasesRepo(db), tz, AliasWordsRepo(db), AliasBlocksRepo(db))
        requester_alias = await alias_service.get_or_issue(c.from_user.id, active_mailbox_id)
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ (–æ–Ω —Å–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º)
        ok = await RelayService(bot, RelaysRepo(db)).open_dialog(author_id, c.from_user.id, author_alias, requester_alias)
        
        if not ok:
            await bot.send_message(c.from_user.id, "‚ùå –ê–≤—Ç–æ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —Å–≤—è–∑–∏.")
            
    except Exception as e:
        logging.error(f"Error in cb_contact for user {c.from_user.id}: {e}")
        await c.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ —á–∞—Ç.", show_alert=True)
