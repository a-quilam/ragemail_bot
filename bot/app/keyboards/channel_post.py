from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict, Any

def channel_kb(count1h: int, count12h: int, allow_contact: bool = True, custom_config: List[Dict[str, Any]] = None) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ—Å—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏"""
    
    if custom_config:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–æ–∫
        buttons = []
        
        for row_config in custom_config:
            if row_config.get("type") == "row":
                row_buttons = row_config.get("buttons", [])
                current_row = []
                
                for button_config in row_buttons:
                    if not button_config.get("enabled", True):
                        continue
                        
                    button_text = button_config["text"]
                    callback_data = button_config["callback_data"]
                    
                    # –î–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
                    if button_config.get("type") == "extend":
                        if "1h" in callback_data:
                            button_text = f"{button_text} ¬∑ {count1h}"
                        elif "12h" in callback_data:
                            button_text = f"{button_text} ¬∑ {count12h}"
                        # –î–ª—è –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ —Å—á–µ—Ç—á–∏–∫ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º
                    
                    # –î–ª—è –∫–Ω–æ–ø–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
                    if button_config.get("type") == "contact" and not allow_contact:
                        continue
                        
                    current_row.append(InlineKeyboardButton(text=button_text, callback_data=callback_data))
                
                # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∫–Ω–æ–ø–æ–∫, –µ—Å–ª–∏ –≤ –Ω–µ–π –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
                if current_row:
                    buttons.append(current_row)
            
        return InlineKeyboardMarkup(inline_keyboard=buttons)
    else:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        row1 = []
        
        if allow_contact:
            row1.extend([
                InlineKeyboardButton(text=f"‚ûï1 —á ¬∑ {count1h}", callback_data="ext:1h"),
                InlineKeyboardButton(text=f"‚ûï12 —á ¬∑ {count12h}", callback_data="ext:12h"),
                InlineKeyboardButton(text="üí¨ –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å", callback_data="contact"),
            ])
        else:
            row1.extend([
                InlineKeyboardButton(text=f"‚ûï1 —á ¬∑ {count1h}", callback_data="ext:1h"),
                InlineKeyboardButton(text=f"‚ûï12 —á ¬∑ {count12h}", callback_data="ext:12h"),
            ])
            
        return InlineKeyboardMarkup(inline_keyboard=[row1])
